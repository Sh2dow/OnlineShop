@model OnlineShop.Models.StoreItem

<div id="chart" style="min-height: 450px; position:relative; margin:auto">
    <span id="Price dynamics">Price dynamics</span>
    <div id="chartContainer"></div>
</div>

<hr />
<div id="other" style="position:relative; display: flex">
    <div style="height: 320px; width: 320px">
        <img data-bind="attr: {src:'data:image;base64,' + Image}" min-height="120" min-width="120" style="max-height: 320px; max-width: 320px" />
    </div>
    <div>
        <dl class="dl-horizontal" style="justify-content: flex-end;">
            <dt>
                <span id="ViewItemURLForNaturalSearch">link:</span>
            </dt>
            <dd>
                <span><a data-bind="text: Title, attr: {href: ViewItemURLForNaturalSearch}"></a></span>
            </dd>
            <dt>
                <span id="ItemID">item id:</span>
            </dt>
            <dd>
                <span data-bind="text: ItemID"></span>
            </dd>
            <dt>
                <span id="Price">Current price:</span>
            </dt>
            <dd>
                <span data-bind="text: '$' + Price.toFixed(2)"></span>
            </dd>
            <dt>
                <span id="EndTime">Ending time:</span>
            </dt>
            <dd>
                <span data-bind="text: new Date(EndTime)"></span>
            </dd>
            <dt>
                <span id="Category">Category:</span>
            </dt>
            <dd>
                <span><a data-bind="text: PrimaryCategoryName, attr: { href: '/Home/SaveProducts?param=' + PrimaryCategoryID }"></a></span>
            </dd>
        </dl>
    </div>
</div>
<div style="vertical-align: bottom">
    <span id="Description" class="center">Description</span>
    <iframe srcdoc="@Html.Raw(Model.Description)" class="DescriptionFrame"></iframe>
</div>
<script src="~/App/canvasjs.min.js"></script>
<script type="text/javascript">
    var jsonData = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model));
    ko.applyBindings(jsonData, document.getElementById("up"));

    var chart = new CanvasJS.Chart("chartContainer", {
        theme: "theme2",
        animationEnabled: true,
        title: {
            text: "Time",
            fontSize: 24
        },
        axisX: {
            valueFormatString: "YYY",
            interval: 1,
            intervalType: "year"

        },
        axisY: {
            title: "USD"
        },

        data: [
        {
            type: "area",
            dataPoints: jsonData["PriceArray"],
        }
        ]
    });
    chart.render();
</script>